pipeline {
    agent none
    stages {
        stage('build-frontend') {
            agent { docker { image 'node:20-bullseye' } }
            steps {
                dir("${env.WORKSPACE}/ui/frontend-workspace"){
                    script {
                        updateGitlabCommitStatus name: 'build-frontend', state: 'running'
                        sh 'npm install'
                    }
                }
            }
            post {
                failure {
                    updateGitlabCommitStatus name: 'build-frontend', state: 'failed'
                    dir("${env.WORKSPACE}/ui/frontend-workspace"){
                        sh "git diff -- ."
                    }
                }
                success {
                    updateGitlabCommitStatus name: 'build-frontend', state: 'success'
                }
            }
        }
        stage('test-frontend') {
            agent { docker { image 'node:20-bullseye' } }
            steps {
                dir("${env.WORKSPACE}/ui/frontend-workspace"){
                    script {
                        updateGitlabCommitStatus name: 'test-frontend', state: 'running'
                        sh 'apt-get update'
                        sh 'wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb'
                        sh 'apt install -y ./google-chrome*.deb'
                        sh 'export CHROME_BIN=/usr/bin/google-chrome'
                        sh 'npm install -g @angular/cli@^17.3.8'
                        sh 'npm install'
                        sh 'npm run build'
                        sh 'npm run test:ci'
                    }
                }
            }
            post {
                failure {
                    updateGitlabCommitStatus name: 'test-frontend', state: 'failed'
                    dir("${env.WORKSPACE}/ui/frontend-workspace"){
                        sh "git diff -- ."
                    }
                }
                success {
                    updateGitlabCommitStatus name: 'test-frontend', state: 'success'
                }
                always {
                    junit "${env.WORKSPACE}/ui/frontend-workspaceunit-test-results.xml"
                }
            }
        }
    }
}
